<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.yanolja.main.mapper.MainMapper">

	<!-- hotel 테이블 전체 컬럼 -->
	<sql id="postColumns">
		hotel.hotelid,
		hotel.hotelname,
		hotel.hotelcall,
		hotel.notification,
		COALESCE((SELECT
		FORMAT((AVG(Kindness) +
		AVG(cleanliness) + AVG(convenience) + AVG(Loc_satisfy)) / 4, 1)
		FROM
		review
		WHERE
		review.hotelid = hotel.hotelid), 0) as rating,
		(SELECT
		COUNT(*)
		FROM
		review
		WHERE
		review.hotelid = hotel.hotelid) AS reviewcount,
		hotel.kindhotel,
		hotel.hotelcreate,
		hotel.hotelmodifed,
		hotel.status,
		(SELECT
		MIN(room.price)
		FROM
		room
		WHERE
		room.hotelid = hotel.hotelid) AS
		price,
		(select regionid
		from region_detail
		where region_detail_id =
		(SELECT
		location.region_detail_id
		FROM
		location
		WHERE
		location.hotelid =
		hotel.hotelid)) as regionid,
		(SELECT
		location.region_detail_id
		FROM
		location
		WHERE
		location.hotelid =
		hotel.hotelid) AS regiondetail,
		(SELECT
		location.roadloc
		FROM
		location
		WHERE
		location.hotelid =
		hotel.hotelid) AS
		roadloc
	</sql>
	<sql id="GenerateDateRange">
		DELIMITER $$
		CREATE FUNCTION GenerateDateRange(startDate
		DATE, endDate DATE)
		RETURNS TEXT
		DETERMINISTIC
		NO SQL
		BEGIN
		DECLARE
		currentDate DATE;
		DECLARE dateRange TEXT DEFAULT '';
		SET currentDate =
		startDate;

		WHILE currentDate &lt;= endDate DO
		SET dateRange =
		CONCAT(dateRange, "'", currentDate, "',");
		SET currentDate =
		DATE_ADD(currentDate, INTERVAL 1 DAY);
		END WHILE;

		RETURN TRIM(TRAILING
		',' FROM dateRange);
		END$$

		DELIMITER ;
	</sql>
	<!-- 저장 -->
	<insert id="save"
		parameterType="com.example.yanolja.main.post.MainRequest"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO hotel (
		<include refid="postColumns" />
		) VALUES (
		#{hotelid}
		, #{hotelname}
		, #{hotelcall}
		, #{hotelcall}
		,
		#{notification}
		, 0.0
		, 0
		, #{kindhotel}
		NOW()
		, NULL
		, #{status}
		)
	</insert>

	<!--상세정보 조회 -->
	<select id="findById" parameterType="long"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM
		hotel
		WHERE
		hotelid = #{value}
	</select>

	<!--수정 -->
	<update id="update"
		parameterType="com.example.yanolja.main.post.MainRequest">
		UPDATE hotel
		SET
		modified_date = NOW()
		, title = #{title}
		,
		content = #{content}
		, writer = #{writer}
		, notice_yn = #{noticeYn}
		WHERE
		id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteById" parameterType="long">
		UPDATE hotel
		SET
		delete_yn =
		1
		WHERE
		id = #{id}
	</delete>

	<!-- 호텔 조회 -->
	<select id="findAll"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM
		hotel
	</select>


	<!-- 호텔 조회 -->
	<select id="findAllFrom" parameterType="map"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM hotel where (select regionid
		from region_detail
		where
		region_detail_id = (SELECT
		location.region_detail_id
		FROM
		location
		WHERE
		location.hotelid = hotel.hotelid)) = #{regionid} and
		kindhotel =
		#{kindhotel}
	</select>

	<!-- 호텔 조회 -->
	<select id="TofindByKind" parameterType="map"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM hotel where
		kindhotel = #{kindhotel}
	</select>

	<!-- 호텔 조회 -->
	<select id="TofindByKindDesc" parameterType="map"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM hotel where
		kindhotel = #{kindhotel}
		ORDER BY rating desc
	</select>

	<!-- 방 조회 -->
	<select id="findRoom"
		resultType="com.example.yanolja.main.post.RoomResponse">
		SELECT
		(select hotelname from hotel where hotel.hotelid =
		room.hotelid) as hotelname, roomid, MaxManCnt, roomname,
		price,roominfo,somke,
		booknoti,roomserve,defaultmancnt,bed,
		bedcnt,rentalType,Checkin,Checkout
		FROM
		room
		where
		hotelid = #{hotelid}
		ORDER BY
		price asc
	</select>

	<!-- 방 조회 -->
	<select id="findRoomDetail"
		resultType="com.example.yanolja.main.post.RoomResponse">
		SELECT
		(SELECT hotelname FROM hotel WHERE hotel.hotelid =
		room.hotelid) AS
		hotelname,
		roomid,
		MaxManCnt,
		roomname,
		price,
		roominfo,
		somke,
		booknoti,
		roomserve,
		defaultmancnt,
		bed,
		bedcnt,
		rentalType,
		Checkin,
		Checkout,
		IFNULL(
		(roomnumber - (
		SELECT COUNT(Reservations.reservedate)
		AS cnt
		FROM (
		SELECT DATE_ADD(#{StartDate}, INTERVAL (n-1) DAY) AS
		reservedate
		FROM (
		SELECT a.N + b.N * 10 + c.N * 100 AS n
		FROM (
		SELECT 0
		AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL
		SELECT 9
		) AS a
		CROSS JOIN (
		SELECT 0 AS N
		UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION
		ALL SELECT 8 UNION ALL
		SELECT 9
		) AS b
		CROSS JOIN (
		SELECT 0 AS N UNION
		ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4
		UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL
		SELECT 8 UNION ALL
		SELECT 9
		) AS c
		) AS numbers
		WHERE
		DATE_ADD(#{StartDate}, INTERVAL (n-1) DAY) = #{StartDate}
		) AS DateList
		LEFT JOIN reserve AS Reservations
		ON DateList.reservedate BETWEEN
		Reservations.reservedate AND
		Reservations.reserveEndDate
		WHERE
		Reservations.roomid = room.roomid OR Reservations.roomid IS NULL
		GROUP
		BY DateList.reservedate
		)),
		roomnumber
		) AS roomcnt,
		defaultinfo,
		(SELECT
		reserveinfo FROM hotel WHERE hotel.hotelid = room.hotelid) AS
		reserveinfo
		FROM room
		WHERE roomid = #{roomid};
	</select>
	<!-- 방 조회 -->
	<select id="findRoomByDate"
		resultType="com.example.yanolja.main.post.RoomResponse">
		SELECT
		roomid,MaxManCnt,roomname,price,roominfo,somke,booknoti,roomserve,defaultmancnt,
		bed,bedcnt,Checkin, IFNULL(
		(roomnumber -(
		SELECT
		COUNT(Reservations.reservedate) AS cnt
		FROM (
		SELECT
		DATE_ADD(#{StartDate},
		INTERVAL (n-1) DAY) AS reservedate
		FROM (
		SELECT
		a.N + b.N * 10 + c.N *
		100 AS n
		FROM (
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION
		ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6
		UNION ALL SELECT 7 UNION ALL SELECT 8
		UNION
		ALL
		SELECT 9
		) AS a
		CROSS JOIN
		(
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL
		SELECT 2 UNION ALL SELECT 3
		UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION
		ALL SELECT 6 UNION ALL
		SELECT 7 UNION ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS
		b
		CROSS JOIN (
		SELECT 0
		AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION
		ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6
		UNION ALL SELECT 7 UNION
		ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS c
		) AS
		numbers
		WHERE
		DATE_ADD(#{StartDate}, INTERVAL (n-1) DAY) = #{StartDate}
		) AS DateList
		LEFT
		JOIN reserve AS
		Reservations
		ON DateList.reservedate
		BETWEEN
		Reservations.reservedate
		AND
		Reservations.reserveEndDate
		WHERE
		Reservations.roomid = room.roomid
		OR Reservations.roomid IS NULL
		GROUP
		BY DateList.reservedate
		)),
		roomnumber
		) AS
		roomcnt , rentalType
		FROM
		room
		WHERE
		hotelid = #{hotelid}
		AND
		roomnumber >=
		(IFNULL(
		(roomnumber -(
		SELECT
		COUNT(Reservations.reservedate) AS cnt
		FROM (
		SELECT
		DATE_ADD(#{StartDate},
		INTERVAL (n-1) DAY) AS reservedate
		FROM (
		SELECT
		a.N + b.N * 10 + c.N *
		100 AS n
		FROM (
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION
		ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6
		UNION ALL SELECT 7 UNION ALL SELECT 8
		UNION
		ALL
		SELECT 9
		) AS a
		CROSS JOIN
		(
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL
		SELECT 2 UNION ALL SELECT 3
		UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION
		ALL SELECT 6 UNION ALL
		SELECT 7 UNION ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS
		b
		CROSS JOIN (
		SELECT 0
		AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION
		ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6
		UNION ALL SELECT 7 UNION
		ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS c
		) AS
		numbers
		WHERE
		DATE_ADD(#{StartDate}, INTERVAL (n-1) DAY) = #{StartDate}
		) AS DateList
		LEFT
		JOIN reserve AS
		Reservations
		ON DateList.reservedate
		BETWEEN
		Reservations.reservedate
		AND
		Reservations.reserveEndDate
		WHERE
		Reservations.roomid = room.roomid
		OR Reservations.roomid IS NULL
		GROUP
		BY DateList.reservedate
		)),
		roomnumber
		));
	</select>

	<select id="reserve_possible"
		resultType="com.example.yanolja.main.post.ReserveResponse">
		SELECT
		DATE_FORMAT(reservedate, "%Y-%m-%d") AS date,
		count(*) AS cnt
		FROM
		reserve
		where
		DATE(reservedate) >= DATE_SUB(NOW(),
		INTERVAL 365 DAY) and hotelid =#{hotelid}
		GROUP
		BY
		DATE_FORMAT(reservedate, "%Y-%m-%d")
		ORDER
		BY date DESC
	</select>

	<select id="hotelLocation"
		resultType="com.example.yanolja.main.post.TrafficResponse">
		SELECT
		roadloc,roadinfo,parking
		FROM
		location
		WHERE
		hotelid =
		#{hotelid}
	</select>


	<select id="hotelintro" resultType="String">
		Select
		hotelintro
		from
		hotel
		where
		hotelid = #{hotelid}
	</select>

	<select id="hotelpolicy"
		resultType="com.example.yanolja.main.post.PolicyResponse">
		Select
		policyname,policycontent
		FROM
		policy
		where
		hotelid =
		#{hotelid}
	</select>

	<select id="hotelinfo"
		resultType="com.example.yanolja.main.post.InfoResponse">
		Select
		infoName, infoDetail
		FROM
		hotel_info
		where
		hotelid =
		#{hotelid}
	</select>

	<select id="roomcnt" resultType="int">
		select
		sum(roomnumber) as
		roomcount
		from
		room
		where
		hotelid = #{hotelid};
	</select>

	<sql id="reviewColums">
		(SELECT format((avg_value),1)
		FROM (SELECT
		(AVG(Kindness) +
		AVG(cleanliness) +
		AVG(convenience) + AVG(Loc_satisfy)) / 4 AS
		avg_value
		FROM review where
		hotelid = #{hotelid}) subquery) as rating,
		(select name from user where
		user.userid = review.userid) as username,
		(select roomname from room
		where room.roomid = review.roomid) as
		roomname,reviewcontent,ratingdate
	</sql>

	<select id="review"
		resultType="com.example.yanolja.main.post.ReviewResponse">
		select
		<include refid="reviewColums" />
		from review
		where hotelid = #{hotelid}
	</select>

	<select id="reviewroom"
		resultType="com.example.yanolja.main.post.ReviewResponse">
		select
		<include refid="reviewColums" />
		from
		review
		where
		roomid= #{roomid}
	</select>

	<select id="reviewroomcnt" resultType="int">
		select
		count(*) as
		reviewcnt
		from
		review
		where
		roomid = #{roomid};
	</select>

	<select id="rating_detail"
		resultType="com.example.yanolja.main.post.ReviewResponse">
		SELECT
		COUNT(*) AS reviewcnt,
		COALESCE(
		(SELECT
		FORMAT((AVG(Kindness) + AVG(cleanliness) + AVG(convenience) +
		AVG(Loc_satisfy)) / 4, 1)
		FROM review
		WHERE hotelid = #{hotelid}), 0) AS
		rating,
		COALESCE(FORMAT(AVG(Kindness), 1), '0') AS Kindness,
		COALESCE(FORMAT(AVG(cleanliness), 1), '0') AS cleanliness,
		COALESCE(FORMAT(AVG(convenience), 1), '0') AS convenience,
		COALESCE(FORMAT(AVG(Loc_satisfy), 1), '0') AS Loc_satisfy
		FROM
		review
		WHERE
		hotelid = #{hotelid};
	</select>
	<!-- 지역별 리스트 조회 -->
	<select id="findlocateby" parameterType="int"
		resultType="com.example.yanolja.main.post.MainResponse">
		SELECT
		<include refid="postColumns" />
		FROM
		hotel
		where
		(select regionid
		from region_detail
		where region_detail_id
		= (SELECT
		location.region_detail_id
		FROM
		location
		WHERE
		location.hotelid =
		hotel.hotelid)) = #{regionid}
	</select>

	<select id="facility"
		resultType="com.example.yanolja.main.post.FacilityResponse">
		Select
		roomStructure, roomCompose, bedCompose, washTool,
		etx, internet, TV, drink,
		roomfacility
		from
		facility
		where
		roomid
		=#{roomid};
	</select>

	<select id="findUPhone" resultType="String">
		Select phone
		from
		user
		where
		name=#{uname}
	</select>

	<select id="cartlist"
		resultType="com.example.yanolja.main.post.RoomResponse">
		<foreach collection="list" item="roomid"
			open="select (SELECT hotelname FROM hotel WHERE hotel.hotelid = room.hotelid) AS hotelname,rentalType,
(select roadloc from location where location.hotelid = room.hotelid) as loc, roomid, MaxManCnt, roomname, price, defaultmancnt, Checkin, Checkout from room where roomid in ("
			separator="," close=")">
			#{roomid}
		</foreach>
	</select>
	<select id="cartlist2"
		resultType="com.example.yanolja.main.post.RoomResponse">
		select (SELECT hotelname FROM hotel WHERE hotel.hotelid = room.hotelid) AS
		hotelname,rentalType,
		(select roadloc from location where location.hotelid = room.hotelid) as loc,
		roomid, MaxManCnt, roomname, price, defaultmancnt, Checkin, Checkout
		from room where roomid = #{roomid}
	</select>
	<select id="reserve_possible2"
		resultType="com.example.yanolja.main.post.ReserveResponse">
		SELECT DateList.reservedate,
		IFNULL(COUNT(Reservations.reservedate), 0) AS
		cnt
		FROM (
		SELECT
		DATE_ADD(CURDATE(), INTERVAL (n-1) DAY) AS reservedate
		FROM (
		SELECT a.N
		+ b.N * 10 + c.N * 100 AS n
		FROM (
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS a
		CROSS JOIN (
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS b
		CROSS JOIN (
		SELECT 0 AS N UNION ALL SELECT 1
		UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL SELECT 4 UNION ALL
		SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8
		UNION ALL
		SELECT 9
		) AS c
		) AS numbers
		WHERE DATE_ADD(CURDATE(), INTERVAL
		(n-1) DAY) BETWEEN CURDATE() AND
		DATE_ADD(CURDATE(), INTERVAL 6 MONTH)
		) AS DateList
		LEFT JOIN reserve AS Reservations
		ON DateList.reservedate
		BETWEEN Reservations.reservedate AND
		Reservations.reserveEndDate
		WHERE
		Reservations.reservedate IS NOT NULL AND Reservations.hotelid =
		#{hotelid}
		GROUP BY DateList.reservedate;
	</select>
</mapper>